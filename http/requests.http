### Health and products endpoints (use IntelliJ HTTP Client)
# Ensure the app is running and listening on port 8082 (server.port defaults to 8082; override with SERVER_PORT)

### App home
GET http://localhost:8082/

### Actuator health (to confirm the server is up)
GET http://localhost:8082/actuator/health

### Actuator mappings (to debug 404s; verify /, /products, etc. are registered)
GET http://localhost:8082/actuator/mappings

### Load products fragment
GET http://localhost:8082/products

### Add a new product (updates the table via HTMX when used from the UI; here we call the endpoint directly)
POST http://localhost:8082/products/add
Content-Type: application/x-www-form-urlencoded

title=HTMX%20Test%20Product&price=12.34&url=https%3A%2F%2Fexample.com%2Fhtmx-test

### Search page
GET http://localhost:8082/search

### Search API (fragment)
GET http://localhost:8082/products/search?q=leggings

### Edit product page (replace {id} with a real product id)
GET http://localhost:8082/products/1/edit

### Update product (form-url-encoded)
POST http://localhost:8082/products/1/edit
Content-Type: application/x-www-form-urlencoded

title=Updated%20Title&price=49.99&url=https%3A%2F%2Fexample.com%2Fupdated

### Delete a product (replace {id})
POST http://localhost:8082/products/1/delete

